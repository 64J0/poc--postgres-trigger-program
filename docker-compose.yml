name: poc

services:
  postgres:
    container_name: postgres_container
    image: postgres:17
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 6
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - ./database/ddl/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  api:
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - DB_CONNECTION_STRING=Host=postgres;Username=postgres;Password=changeme;Database=postgres;Connection Pruning Interval=1;Connection Idle Lifetime=2;Enlist=false;No Reset On Close=true
      - PROGRAMS_STORE=/app/store/
    ports:
      - "5000:5000"
    networks:
      - postgres
    volumes:
      - script-store:/app/store
      
  manager:
    container_name: manager
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile.manager
    environment:
      - DB_CONNECTION_STRING=Host=postgres;Username=postgres;Password=changeme;Database=postgres;Connection Pruning Interval=1;Connection Idle Lifetime=2;Enlist=false;No Reset On Close=true
      - POSTGRES_CHANNEL=program_manager_channel
    networks:
      - postgres
    volumes:
      - script-store:/app/store

networks:
  postgres:
    driver: bridge

volumes:
  script-store:
